import { useAuthPageState } from "@/store"
import { SaveOutlined } from "@ant-design/icons"
import { Button, Card, Form, Input, message } from "antd"

const rules = {
  'password': [
    { required: true, message: '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
    { min: 8, max: 32, message: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–µ–µ 8 –∏ –∫–æ—Ä–æ—á–µ 32' },
    { pattern: /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/, message: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–ø–∏—Å–Ω—ã–µ –∏ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã' }
  ]
}

interface Form {
  newPassword: string
}

export default function ChangePass() {
  const [change, status] = useAuthPageState(s => [s.changePass, s.changePassStatus])  
  const [form] = Form.useForm<Form>()
  
  function onFinish(data: Form) {
    change(data.newPassword).then(code => {
      if (code == 'error')
        message.error('–û—à–∏–±–∫–∞ ü§ì. –û—Ç—Å–æ—Å–∏')
      else if (code == 'ok') {
        message.success('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω—ë–Ω')
      }
    })
  }

  return (
    <Card style={{ padding: 28 }}>
      <Form 
        form={form}
        onFinish={onFinish}>
        <Form.Item 
          name='newPassword'
          rules={rules.password}
          required>
          <Input type="password" placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"/>
        </Form.Item>

        <Form.Item>
          <Button
            type="primary"
            htmlType="submit"
            style={{ marginRight: 30 }}
            loading={status == 'process'}
            icon={<SaveOutlined />}>
              –ò–∑–º–µ–Ω–∏—Ç—å
          </Button>
        </Form.Item>
      </Form>
    </Card>
  )
}
